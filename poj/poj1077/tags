!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ans	test.cpp	/^char ans[]= "12345678x";$/;"	v
check	poj1077_Astar.cpp	/^bool check(const node &s)$/;"	f
dd	poj1077_Astar.cpp	/^int dd[] = {-1,-3,1,3};$/;"	v
dd	test.cpp	/^int dd[] = {-1, -3, 1, 3};$/;"	v
dir	poj1077_Astar.cpp	/^	int pre,step,dir,f,pos,id;$/;"	m	struct:node	file:
dir	test.cpp	/^    int pre, step, dir, f, pos, id;$/;"	m	struct:node	file:
f	poj1077_Astar.cpp	/^	int pre,step,dir,f,pos,id;$/;"	m	struct:node	file:
f	test.cpp	/^    int pre, step, dir, f, pos, id;$/;"	m	struct:node	file:
fac	poj1077_Astar.cpp	/^int fac[] = {1,1,2,6,24,120,720,5040,40320};$/;"	v
fac	test.cpp	/^int fac[] = {1, 1, 2, 6, 24, 120, 720, 5040, 40320};$/;"	v
h	poj1077_Astar.cpp	/^int h(const node &n)$/;"	f
h	test.cpp	/^int h(const node &t)$/;"	f
hash	poj1077_Astar.cpp	/^int hash(const node &n)$/;"	f
hash	test.cpp	/^int hash(const node &t)  \/\/将全排列转化为数字，序列值为0~n!-1，达到了完美的映射$/;"	f
id	poj1077_Astar.cpp	/^	int pre,step,dir,f,pos,id;$/;"	m	struct:node	file:
id	test.cpp	/^    int pre, step, dir, f, pos, id;$/;"	m	struct:node	file:
main	poj1077_Astar.cpp	/^int main()$/;"	f
main	t.c	/^int main()$/;"	f
main	test.cpp	/^int main()$/;"	f
move	poj1077_Astar.cpp	/^bool move[][4] = {{0,0,1,1}, {1,0,1,1}, {1,0,0,1}, {0,1,1,1}, {1,1,1,1}, {1,1,0,1}, {0,1,1,0}, {1,1,1,0}, {1,1,0,0}};$/;"	v
move	test.cpp	/^bool move[][4] = {{0,0,1,1}, {1,0,1,1}, {1,0,0,1}, {0,1,1,1}, {1,1,1,1}, {1,1,0,1}, {0,1,1,0}, {1,1,1,0}, {1,1,0,0}};$/;"	v
node	poj1077_Astar.cpp	/^	node(){dir = -1;}$/;"	f	struct:node
node	poj1077_Astar.cpp	/^	node(int pr,int st,int di,int po,char te[])$/;"	f	struct:node
node	poj1077_Astar.cpp	/^struct node$/;"	s	file:
node	test.cpp	/^    node(){dir = -1;}$/;"	f	struct:node
node	test.cpp	/^    node(int u, int v, int w, int y, char t[])$/;"	f	struct:node
node	test.cpp	/^struct node$/;"	s	file:
operator <	poj1077_Astar.cpp	/^	bool operator< (const node &n) const {$/;"	f	struct:node
operator <	test.cpp	/^    bool operator <(const node &n) const$/;"	f	struct:node
output	poj1077_Astar.cpp	/^void output(const node &n)$/;"	f
output	test.cpp	/^void output(const node &n)$/;"	f
p	test.cpp	/^}p[400000];$/;"	v	typeref:struct:node
pos	poj1077_Astar.cpp	/^	int pre,step,dir,f,pos,id;$/;"	m	struct:node	file:
pos	test.cpp	/^    int pre, step, dir, f, pos, id;$/;"	m	struct:node	file:
pow	t.c	/^int pow(int m,int n)$/;"	f
pre	poj1077_Astar.cpp	/^	int pre,step,dir,f,pos,id;$/;"	m	struct:node	file:
pre	test.cpp	/^    int pre, step, dir, f, pos, id;$/;"	m	struct:node	file:
q	poj1077_Astar.cpp	/^}q[400000];$/;"	v	typeref:struct:node
q	test.cpp	/^priority_queue<node>q;$/;"	v
que	poj1077_Astar.cpp	/^priority_queue<node> que;$/;"	v
step	poj1077_Astar.cpp	/^	int pre,step,dir,f,pos,id;$/;"	m	struct:node	file:
step	test.cpp	/^    int pre, step, dir, f, pos, id;$/;"	m	struct:node	file:
vis	poj1077_Astar.cpp	/^bool vis[400000];$/;"	v
vis	test.cpp	/^bool vis[400000];$/;"	v
x	poj1077_Astar.cpp	/^	char x[10];$/;"	m	struct:node	file:
x	test.cpp	/^    char x[10];$/;"	m	struct:node	file:
