//1861184 2009-05-09 13:07:33 Time Limit Exceeded  2110 C++ 1001 184 Wpl 

//1861217 2009-05-09 13:22:44 Accepted  2110 C++ 900 184 Wpl 

//1861239 2009-05-09 13:34:01 Accepted  2110 C++ 10 184 Wpl

//1861244 2009-05-09 13:34:49 Accepted  2110 C++ 0 184 Wpl  

//奇偶剪枝,再次剪枝

#include <iostream>
#include <cstdlib>
#include <cstdio>

#define MAX 7

using namespace std;

int sx,sy,ex,ey;

int n,m,t;

int a[4][2]={{0,1},{0,-1},{1,0},{-1,0}};

char map[MAX][MAX];

bool used[MAX][MAX],mark;

int num;

void Init()

{

    int i,j;

    for(i=0;i<n;i++)

        for(j=0;j<m;j++)

        {

            cin>>map[i][j];

            if(map[i][j]=='S')

            {

                sx=i;

                sy=j;

            }

            else if(map[i][j]=='D')

            {

                ex=i;

                ey=j;

            }

            used[i][j]=false;

        }

}

bool Bound(int x,int y)

{

    if(x>=0&&y>=0&&x<n&&y<m)

        return true;

    else

        return false;

}

int Dis(int x1,int y1,int x2,int y2)

{

    return abs(x1-x2)+abs(y1-y2);

}

void DFS(int x,int y,int step)

{

    if(mark||num>10000)  //num>10000这个条件是从shǎ崽大牛那学来的,其实这不是正确的途径,用这个方法竟然刷到0ms

        return;

    if(x==ex&&y==ey&&step==t)

    {

        mark=true;

        return ;

    }

    int k,tx,ty;

    int dis=Dis(x,y,ex,ey);

    if(dis>(t-step))

        return;

    if(dis%2!=(t-step)%2)

        return ;

    for(k=0;k<4;k++)

    {

        tx=x+a[k][0];

        ty=y+a[k][1];

        if(Bound(tx,ty)&&!used[tx][ty]&&map[tx][ty]!='X')

        {

            num++;

            step++;

            used[tx][ty]=true;

            DFS(tx,ty,step);

            step--;

            used[tx][ty]=false;

        }

    }    

}

int main()

{

    while(scanf("%d%d%d",&n,&m,&t)!=EOF)

    {

        if(n==0&&m==0&&t==0)

            break;

        Init();

        mark=false;

        used[sx][sy]=true;

        num=0;

        DFS(sx,sy,0);

        if(mark)

            printf("YES\n");

        else

            printf("NO\n");

    }

    return 0;

}
